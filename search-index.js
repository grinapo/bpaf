var searchIndex = new Map(JSON.parse('[\
["bpaf",{"t":"FYPPFPPFGKPGPPCHCNNNNNNNNNNHNNNNNNNNNNNQNNNNCHNHNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNCNCHNHHNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCHHHHHPFPPPPPPPFPPGPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Args","Bpaf","Completion","Dir","Doc","File","Nothing","OptionParser","ParseFailure","Parser","Raw","ShellComp","Stderr","Stdout","_documentation","any","batteries","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","check_invariants","choice","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect","command","complete","complete_shell","construct","count","current_args","custom_usage","descr","doc","env","exit_code","fail","fallback","fallback_to_usage","fallback_with","fmt","fmt","footer","from","from","from","from","from","from","from","from","from","group_help","guard","header","help_parser","hide","hide_usage","into","into","into","into","last","literal","long","many","map","max_width","optional","params","parse","parsers","positional","print_message","pure","pure_with","render_html","render_manpage","render_markdown","run","run","run_inner","set_comp","set_name","short","some","to_options","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_run","type_id","type_id","type_id","type_id","unwrap_stderr","unwrap_stdout","usage","version","version_parser","with_group_help","with_usage","bash","elvish","fish","mask","mask","zsh","_0_intro","_1_tutorials","_2_howto","_3_cookbook","_4_explanation","_0_types_of_arguments","_1_combinatoric_api","_2_derive_api","_3_picking_type","_0_switch","_1_argument","_2_positional","_3_command","_4_exotic","_0_simple_parser","_1_chaining","_2_combining","_3_subcommands","_4_decorating","_0_switch","_1_argument","_2_positional","_0_intro","_1_custom_names","_2_custom_consumers","_3_postpr","_4_enums_and_structs","_5_generate","_6_nesting","_7_commands","_8_cargo","_0_testing","_1_completion","_00_find","_01_dd","_02_xorg","_03_command_chaining","_04_multi_value","_05_struct_groups","_06_multi_flag","_07_skip_positional","_08_cargo_helper","_09_numeric_flags","cargo_helper","get_usage","toggle_flag","verbose_and_quiet_by_number","verbose_by_slice","Custom","Doc","Emphasis","FileFormat","Game","General","Invalid","LibraryFunction","Literal","MetaInfo","Metavar","Misc","Section","SpecialFile","Style","Sysadmin","SystemCall","Text","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","doc","em_doc","emphasis","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","invalid","literal","meta","monochrome","render_markdown","text","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","NamedArg","ParseAny","ParseArgument","ParseCommand","ParseFlag","ParsePositional","adjacent","adjacent","anywhere","argument","env","flag","help","help","help","help","help","long","long","metavar","non_strict","req_flag","short","short","strict","switch","NamedArg","ParseAny","ParseArgument","ParseCollect","ParseCommand","ParseCompShell","ParseCon","ParseCount","ParseFallback","ParseFallbackWith","ParseFlag","ParseLast","ParseMany","ParseOptional","ParsePositional","ParseSome","adjacent","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catch","catch","catch","catch","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","debug_fallback","debug_fallback","display_fallback","display_fallback","failfast","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","help","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","meta","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"bpaf"],[120,"bpaf::ShellComp"],[126,"bpaf::_documentation"],[131,"bpaf::_documentation::_1_tutorials"],[135,"bpaf::_documentation::_1_tutorials::_0_types_of_arguments"],[140,"bpaf::_documentation::_1_tutorials::_1_combinatoric_api"],[145,"bpaf::_documentation::_1_tutorials::_1_combinatoric_api::_0_simple_parser"],[148,"bpaf::_documentation::_1_tutorials::_2_derive_api"],[157,"bpaf::_documentation::_2_howto"],[159,"bpaf::_documentation::_3_cookbook"],[169,"bpaf::batteries"],[174,"bpaf::doc"],[258,"bpaf::params"],[284,"bpaf::parsers"],[442,"core::str::traits"],[443,"core::option"],[444,"core::ops::function"],[445,"alloc::boxed"],[446,"bpaf::info"],[447,"core::iter::traits::collect"],[448,"bpaf::complete_shell"],[449,"bpaf::error"],[450,"bpaf::structs"],[451,"alloc::string"],[452,"core::convert"],[453,"alloc::vec"],[454,"bpaf::args"],[455,"bpaf::buffer"],[456,"core::result"],[457,"core::fmt"],[458,"std::ffi::os_str"],[459,"bpaf::buffer::manpage"],[460,"core::any"],[461,"core::marker"],[462,"core::clone"],[463,"bpaf_derive"]],"i":[0,0,17,16,0,16,16,0,0,0,16,0,17,17,0,0,0,27,11,16,17,27,11,16,17,9,11,0,16,17,16,17,16,16,17,9,11,9,9,0,9,27,9,11,0,0,17,0,9,11,9,16,17,11,27,27,27,27,27,27,11,16,17,9,9,11,11,9,9,27,11,16,17,9,0,0,9,9,11,9,0,9,0,0,17,0,0,11,11,11,11,9,11,27,27,0,9,9,16,17,27,11,16,17,27,11,16,17,11,27,11,16,17,17,17,11,11,11,9,11,61,61,61,62,63,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,55,46,46,46,55,46,55,0,55,46,0,46,0,46,46,55,46,51,55,28,46,51,55,28,46,51,55,28,46,51,55,28,46,46,51,51,55,55,28,28,28,28,28,55,46,55,28,28,46,51,55,28,28,28,28,46,51,55,28,28,28,28,28,28,28,46,51,55,28,28,46,51,55,28,46,51,55,28,46,51,55,28,0,0,0,0,0,0,20,56,3,29,29,29,20,3,29,57,45,20,29,3,45,29,20,29,45,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45,49,18,44,42,29,57,56,45,29,57,56,45,29,57,56,45,32,31,32,31,59,29,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45,56,59,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45,59,29,57,56,45,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45,25,20,3,32,49,18,31,26,41,44,42,59,29,57,56,45],"f":"```````````````{{{d{b}}g}{{f{e}}}h{}{{n{c}{{j{{l{e}}}}}}}}`{{{d{c}}}{{d{e}}}{}{}}000{{{d{A`c}}}{{d{A`e}}}{}{}}000{Ab{{Ad{Ab}}}}{{{d{{Af{c}}}}Ah}Aj{}}{c{{`{{Ab{e}}}}}{{An{}{{Al{{Ad{Ab}}}}}}}{}}{{{d{B`}}}B`}{{{d{Bb}}}Bb}{{{d{c}}{d{A`e}}}Aj{}{}}0{{{d{c}}}Aj{}}00{Ab{{Bd{Abec}}}{}{{Bf{c}}}}{{{Af{c}}{d{b}}}{{Bh{c}}}{}}{{Abg}{{`{Abg}}}{}{{Bl{Bj}}}{{n{{d{c}}}{{j{{C`{{Bn{e{l{e}}}}}}}}}}}}{{AbB`}{{Cb{Ab}}}}`{Ab{{Cd{Abc}}}{}}{{}Cf}{{Abc}{{`{Ab}}}{{Bl{Ch}}}}{{{Af{c}}e}{{Af{c}}}{}{{Bl{Ch}}}}`{{{d{b}}}Cj}{BbCl}{{{d{b}}}{{`{c}}}{}}{{Abc}{{Cn{Abc}}}{}}{{{Af{c}}}{{Af{c}}}{}}{{Abg}{{D`{cAbge}}}{}Db{{n{}{{j{{Dd{ce}}}}}}}}{{{d{B`}}{d{A`Df}}}Dh}{{{d{Bb}}{d{A`Df}}}Dh}8{cc{}}{{{d{{Dl{Dj}}}}}Cf}{{{d{{Dl{Bj}}}}}Cf}{{{d{{Dl{{d{b}}}}}}}Cf}{{{d{{Dn{{d{b}}}}}}}Cf}{{{d{{Dl{{d{E`}}}}}}}Cf}555?{{Abe{d{b}}}{{`{Abe}}}{}{{n{{d{c}}}{{j{Ah}}}}}}?{{{Af{c}}Cj}{{Af{c}}}{}}{Ab{{`{Ab}}}}0{ce{}{}}000{Ab{{Eb{Ab}}}}{{{d{b}}}{{f{Aj}}}}{{{d{b}}}Cj}{Ab{{Ed{Ab}}}}{{Abg}{{`{cAbge}}}{}{}{{n{c}{{j{e}}}}}}{{{Af{c}}Ef}{{Af{c}}}{}}{Ab{{Eh{Ab}}}}`{{Abi}{{`{cAbige}}}{}{}Db{{n{c}{{j{{Dd{eg}}}}}}}}`{{{d{b}}}{{Ej{c}}}{}}{{{d{Bb}}Ef}Aj}{c{{`{c}}}{}}{g{{`{cge}}}{}Db{{n{}{{j{{Dd{ce}}}}}}}}{{{d{{Af{c}}}}e}Bj{}{{Bl{Bj}}}}{{{d{{Af{c}}}}eEl{l{{d{b}}}}{l{{d{b}}}}{l{{d{b}}}}}Bj{}{{En{b}}}}1{{{Af{c}}}c{}}{Abc{}}{{{d{{Af{c}}}}e}{{Dd{cBb}}}{}{{Bl{Cf}}}}{{CfEf}Cf}{{Cf{d{b}}}Cf}{F`Cj}{{Ab{d{b}}}{{Fb{Ab}}}}{Ab{{Af{c}}}{}}{{{d{c}}}e{}{}}0{c{{Dd{e}}}{}{}}0000000{{{Af{c}}}{{Dd{cBb}}}{}}{{{d{c}}}Fd{}}000{BbBj}0{{{Af{c}}e}{{Af{c}}}{}{{Bl{Ch}}}}0{{{Af{c}}Cj}{{Af{c}}}{}}{{Abc}{{`{Abc}}}{{n{Ff}{{j{Ch}}}}}}{{{Af{c}}e}{{Af{c}}}{}{{n{Ch}{{j{Ch}}}}}}`````````````````````````````````````````````````{{{d{b}}e}{{`{{Ab{c}}}}}{}{{Ab{c}}}}{{{Af{c}}}BjFh}{{CjcCjc}{{`{{Ab{{l{c}}}}}}}Fj}{{FlFlFl}{{`{{Ab{Fl}}}}}}{{Ef{Dn{c}}}{{`{{Ab{c}}}}}Fj}``````````````````{{{d{c}}}{{d{e}}}{}{}}000{{{d{A`c}}}{{d{A`e}}}{}{}}000{{{d{El}}}El}{{{d{Ff}}}Ff}{{{d{Fn}}}Fn}{{{d{Ch}}}Ch}{{{d{c}}{d{A`e}}}Aj{}{}}000{{{d{c}}}Aj{}}000000{{}Ch}{{{d{A`Ch}}{d{Ch}}}Aj}0{{{d{A`Ch}}{d{b}}}Aj}{{{d{Fn}}{d{Fn}}}Ah}{{{d{El}}{d{A`Df}}}Dh}{{{d{Fn}}{d{A`Df}}}Dh}{{{d{Ch}}{d{A`Df}}}Dh}0{cc{}}00{{{d{b}}}Ch}{{{d{{Dl{{Bn{{d{b}}Fn}}}}}}}Ch}{{{d{{Dn{{Bn{{d{b}}Fn}}}}}}}Ch}3{ce{}{}}00099{{{d{A`Ch}}FfAh}Aj}{{{d{Ch}}Ah}Bj}0;{{{d{c}}}e{}{}}000{{{d{c}}}Bj{}}{c{{Dd{e}}}{}{}}0000000{{{d{c}}}Fd{}}000``````{{{Bh{c}}}{{Bh{c}}}{}}{{{G`{c}}}{{G`{c}}}{}}{{{f{c}}}{{f{c}}}{}}{{Cj{d{b}}}{{G`{c}}}h}{{Cj{d{b}}}Cj}{{Cjcc}{{Gb{c}}}Gd}{{{Bh{c}}e}{{Bh{c}}}{}{{Bl{Ch}}}}{{{f{c}}e}{{f{c}}}{}{{Bl{Ch}}}}{{Cjc}Cj{{Bl{Ch}}}}{{{Gb{c}}e}{{Gb{c}}}{}{{Bl{Ch}}}}{{{Ej{c}}e}{{Ej{c}}}{}{{Bl{Ch}}}}{{{Bh{c}}{d{b}}}{{Bh{c}}}{}}74{{{Ej{c}}}{{Ej{c}}}{}}{{Cjc}{{`{{Ab{c}}}}}Gd}{{{Bh{c}}F`}{{Bh{c}}}{}}{{CjF`}Cj}3{Cj{{Gb{Ah}}}}````````````````{{{Gf{c}}}{{`{{Gf{c}}}}}{}}{{{d{c}}}{{d{e}}}{}{}}000000000000000{{{d{A`c}}}{{d{A`e}}}{}{}}000000000000000{{{Fb{c}}}{{Fb{c}}}{}}{{{Bd{ceg}}}{{Bd{ceg}}}{}{}{}}{{{Eh{c}}}{{Eh{c}}}{}}{{{Ed{c}}}{{Ed{c}}}{}}{{{d{Cj}}}Cj}{{{d{{Gb{c}}}}}{{Gb{c}}}Gd}{{{d{{G`{c}}}}}{{G`{c}}}Gd}{{{d{{Ej{c}}}}}{{Ej{c}}}Gd}{{{d{c}}{d{A`e}}}Aj{}{}}000{{{d{c}}}Aj{}}000{{{D`{ceig}}}{{D`{ceig}}}Fh{}{}{{n{}{{j{{Dd{cg}}}}}}}}{{{Cn{ce}}}{{Cn{ce}}}{}Fh}{{{D`{ceig}}}{{D`{ceig}}}Gh{}{}{{n{}{{j{{Dd{cg}}}}}}}}{{{Cn{ce}}}{{Cn{ce}}}{}Gh}`{{{d{Cj}}{d{A`Df}}}Dh}{cc{}}000000000000000{{{G`{c}}e}{{G`{c}}}{}{{Bl{Ch}}}}`{ce{}{}}000000000000000`{{{d{c}}}e{}{}}000{c{{Dd{e}}}{}{}}0000000000000000000000000000000{{{d{c}}}Fd{}}000000000000000","D":"B@j","p":[[1,"str"],[1,"reference"],[5,"ParseAny",284,258],[10,"FromStr",442],[17,"Output"],[6,"Option",443],[10,"Fn",444],[0,"mut"],[10,"Parser",0],[5,"Box",445],[5,"OptionParser",0,446],[1,"bool"],[1,"unit"],[17,"Item"],[10,"IntoIterator",447],[6,"ShellComp",0,448],[6,"ParseFailure",0,449],[5,"ParseCollect",284,450],[10,"FromIterator",447],[5,"ParseCommand",284,258],[5,"String",451],[10,"Into",452],[1,"tuple"],[5,"Vec",453],[5,"ParseCompShell",284,448],[5,"ParseCount",284,450],[5,"Args",0,454],[5,"Doc",174,455],[5,"NamedArg",284,258],[1,"i32"],[5,"ParseFallback",284,450],[5,"ParseFallbackWith",284,450],[10,"ToString",451],[6,"Result",456],[5,"Formatter",457],[8,"Result",457],[5,"OsString",458],[1,"slice"],[1,"array"],[5,"OsStr",458],[5,"ParseLast",284,450],[5,"ParseMany",284,450],[1,"usize"],[5,"ParseOptional",284,450],[5,"ParsePositional",284,258],[6,"Section",174,459],[10,"AsRef",452],[1,"char"],[5,"ParseSome",284,450],[5,"TypeId",460],[5,"MetaInfo",174,455],[10,"Debug",457],[10,"Copy",461],[1,"isize"],[6,"Style",174,455],[5,"ParseArgument",284,258],[5,"ParseFlag",284,258],[10,"Clone",462],[5,"ParseCon",284,450],[10,"Display",457],[15,"Raw",120],[15,"File",120],[15,"Dir",120]],"r":[[0,454],[1,463],[4,455],[7,446],[8,449],[11,448],[175,455],[183,455],[186,459],[188,455],[284,258],[285,258],[286,258],[287,450],[288,258],[289,448],[290,450],[291,450],[292,450],[293,450],[294,258],[295,450],[296,450],[297,450],[298,258],[299,450]],"b":[[55,"impl-From%3C%26%5BOsString%5D%3E-for-Args%3C\'a%3E"],[56,"impl-From%3C%26%5BString%5D%3E-for-Args%3C\'a%3E"],[57,"impl-From%3C%26%5B%26str%5D%3E-for-Args%3C\'a%3E"],[58,"impl-From%3C%26%5B%26str;+N%5D%3E-for-Args%3C\'_%3E"],[59,"impl-From%3C%26%5B%26OsStr%5D%3E-for-Args%3C\'a%3E"],[222,"impl-Display-for-Doc"],[223,"impl-Debug-for-Doc"],[227,"impl-From%3C%26str%3E-for-Doc"],[228,"impl-From%3C%26%5B(%26str,+Style)%5D%3E-for-Doc"],[229,"impl-From%3C%26%5B(%26str,+Style);+N%5D%3E-for-Doc"]],"c":"OjAAAAEAAAAAAAAAEAAAAG0A","e":"OzAAAAEAALUADgASAAcAHQAGADQAAQA4AAQAYwAJAG4AAwDBABcA3AAEAOQAAgDyABAALgEfAFIBCwBjAQAAhwEzAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
